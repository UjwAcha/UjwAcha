<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2022-04-15 Fri 23:00 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>C programming unit test</title>
<meta name="author" content="Acharya Ujwol" />
<meta name="generator" content="Org Mode" />
<style>
  body{
      background-color: black;
      color: pink;
  }
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid pink;
    border-radius: 3px;
    background-color: black;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: pink;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
</head>
<body>
<div id="content" class="content">
<h1 class="title">C programming unit test</h1>
<div id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org367820e">what is loop in C programming language? Also define its types. WAP that needs the principal, rate of interest and number of year and final the simple interest and amount.</a></li>
<li><a href="#orge322b98">what is conditional statements and its types.? WAP to input any number and find out whether it is positive or negative</a></li>
<li><a href="#org7cbd109">What is array in c language also define its types? WAP to sort the given array.</a></li>
<li><a href="#orgdbe8741">a program to display all the numbers upto 100</a></li>
</ul>
</div>
</div>

<div id="outline-container-org367820e" class="outline-2">
<h2 id="org367820e">what is loop in C programming language? Also define its types. WAP that needs the principal, rate of interest and number of year and final the simple interest and amount.</h2>
<div class="outline-text-2" id="text-org367820e">
</div>
<div id="outline-container-org00eee92" class="outline-3">
<h3 id="org00eee92">a loop in the C programming language is a block of code that allows us to execute statements multiple times</h3>
<div class="outline-text-3" id="text-org00eee92">
</div>
<div id="outline-container-orgf42400c" class="outline-4">
<h4 id="orgf42400c">it's types are :</h4>
<div class="outline-text-4" id="text-orgf42400c">
<ol class="org-ol">
<li><p>
for loop - the loop that is the repetation control structure that allows us to  execute a statement certian number of times
</p>
<div class="org-src-container">
<pre class="src src-c">   for (int i = 0 ; i &lt; 5 ; i++ ) {
printf("%d" , i);
   }
</pre>
</div></li>
<li><p>
while loop - the loop that repeats a block of code unknown number of time until the required value is met where the checks are done before executing the statements .
</p>
<div class="org-src-container">
<pre class="src src-c">   while(1){
printf("this will go on forever") ;
   }
</pre>
</div></li>
</ol>
<p>
3.do while loop - it is a loop that repeats a block of code unknown number of time until the required value is met where checks are done after executing the statements
</p>
<div class="org-src-container">
<pre class="src src-c">do {
  printf("this will also go on forever") ;
} while (1) ;
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgfb25b33" class="outline-3">
<h3 id="orgfb25b33">A program that calculates simple intest</h3>
<div class="outline-text-3" id="text-orgfb25b33">
<div class="org-src-container">
<pre class="src src-c">#include &lt;stdio.h&gt;

int main(){
int P , T , R ;
printf("principle &gt;&gt; ");
scanf("%d" , &amp;P) ;
printf("Time &gt;&gt; ");
scanf("%d" , &amp;T) ;
printf("Rate &gt;&gt; ");
scanf("%d" , &amp;R) ;
float Int = (P*T*R)/100 ;
printf("the intrest is : %f\n" , Int) ;
    }
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orge322b98" class="outline-2">
<h2 id="orge322b98">what is conditional statements and its types.? WAP to input any number and find out whether it is positive or negative</h2>
<div class="outline-text-2" id="text-orge322b98">
</div>
<div id="outline-container-org2513d89" class="outline-3">
<h3 id="org2513d89">conditional statements are the statements used to make decisions based on certian conditions</h3>
<div class="outline-text-3" id="text-org2513d89">
</div>
<div id="outline-container-orga1c8f7c" class="outline-4">
<h4 id="orga1c8f7c">it's types are</h4>
<div class="outline-text-4" id="text-orga1c8f7c">
</div>
<ul class="org-ul">
<li><a id="org98bf827"></a>if else  statements<br />
<div class="outline-text-5" id="text-org98bf827">
<p>
these statements are the same as what they say , the code inside the block will be executed if it is true and code in else will be executed if it is false
</p>

<div class="org-src-container">
<pre class="src src-c">   if(boolean_expression) {
     /* codes execute if the boolean expression is true */
  } else {
/* code will be executed if the boolean_expression is false */
   }

</pre>
</div>
</div>
</li>
<li><a id="org8c22594"></a>switch case statements<br />
<div class="outline-text-5" id="text-org8c22594">
<p>
it is a statement which allows a variable to be tested for equality from a list of values and execute code accordingly
</p>
<div class="org-src-container">
<pre class="src src-c">switch(variable) {

   case constant  :
      statement();
      break; 

   case constant  :
      statement();
      break;

   default : 
   statement();
}
</pre>
</div>
</div>
</li>
</ul>
</div>
</div>
<div id="outline-container-orgc521ae0" class="outline-3">
<h3 id="orgc521ae0">Program to check if a number is positive or negative</h3>
<div class="outline-text-3" id="text-orgc521ae0">
<div class="org-src-container">
<pre class="src src-c">  #include &lt;stdio.h&gt;
int main(){
float f ;
printf("enter a number : ");
scanf("%f" , &amp;f);
if(f &gt; 0){
printf("it is +ve\n");
} else if (f &lt; 0){
printf("it is -ve\n");
}else {
printf("it is a 0\n");
}
}

</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-org7cbd109" class="outline-2">
<h2 id="org7cbd109">What is array in c language also define its types? WAP to sort the given array.</h2>
<div class="outline-text-2" id="text-org7cbd109">
</div>
<div id="outline-container-org873fbe1" class="outline-3">
<h3 id="org873fbe1">an array in c is a variable that can store multiple values</h3>
</div>
<div id="outline-container-orge5627cf" class="outline-3">
<h3 id="orge5627cf">program to sort a given array</h3>
<div class="outline-text-3" id="text-orge5627cf">
<div class="org-src-container">
<pre class="src src-c">#include &lt;stdio.h&gt;
int main(){
  int array[5] = {5 , 4, 44 , 7 , 11} ;
  int temp ;
  for(int j = 0 ; j &lt; 5 ; j++){
    for(int i = 0 ; i &lt; (5-1) ; i ++)
      if (array[i] &gt; array[i+1]){
	temp = array[i+1] ;
	array[i+1] = array[i] ;
	array[i] = temp ;
      }
  }
  for(int i = 0 ; i &lt; 5 ; i++){
  printf("%i\n" , array[i]) ;
  }
}
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgdbe8741" class="outline-2">
<h2 id="orgdbe8741">a program to display all the numbers upto 100</h2>
<div class="outline-text-2" id="text-orgdbe8741">
<div class="org-src-container">
<pre class="src src-c">#include &lt;stdio.h&gt;
int main(){
for(int i = 0 ; i &lt;= 100 ; i++){printf("%d\n",i) ;}
return 0 ;
}
</pre>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Author: Acharya Ujwol</p>
<p class="date">Created: 2022-04-15 Fri 23:00</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
